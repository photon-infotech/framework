<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.photon.phresco.framework</groupId>
	<artifactId>PhrescoFrameworkRuntime</artifactId>
	<packaging>pom</packaging>
	<version>3.3.1.9001-SNAPSHOT</version>
	<name>Phresco Framework Web Application</name>

    <properties>
		<phresco.framework.version>3.3.1.9001-SNAPSHOT</phresco.framework.version>		
		<tomcat.version>7.0.21.3</tomcat.version>
		<phantomjs.version>1.5.0</phantomjs.version>
		<tfs.version>1.0</tfs.version>
		<depot_tools.version>1.0</depot_tools.version>
	</properties>

	<dependencies>
	
	  <dependency>
		<groupId>com.photon.phresco.framework</groupId>
		<artifactId>phresco-framework-web</artifactId>
		<version>${phresco.framework.version}</version>
		<type>war</type>
	  </dependency>
	  
	  <dependency>
		<groupId>binaries</groupId>
		<artifactId>apache-tomcat-https</artifactId>
		<version>${tomcat.version}</version>
		<type>zip</type>
	  </dependency>
	  
	  <dependency>
		<groupId>com.photon.phresco.file.server</groupId>
		<artifactId>file-server</artifactId>
		<version>${phresco.framework.version}</version>
		<type>jar</type>
	  </dependency>
	  
      <!-- Ant dependency for (if and for) loop to run in ant -->
	
        <dependency>
          <groupId>ant-contrib</groupId>
          <artifactId>ant-contrib</artifactId>
          <version>1.0b3</version>
        </dependency>
    
	</dependencies>
	    
	<build>	
		<plugins>		
		  
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.3</version>
				<executions>

					<!-- Unpacking the downloaded files to the required location -->
					<execution>
						<id>unpack-binaries</id>
						<phase>validate</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<markersDirectory>../workspace/temp/markers</markersDirectory>
							<artifactItems>
								<!-- extracting tomcat -->
								<artifactItem>
									<groupId>binaries</groupId>
									<artifactId>apache-tomcat-https</artifactId>
									<version>${tomcat.version}</version>
									<type>zip</type>
									<overWrite>false</overWrite>
									<outputDirectory>../workspace/tools</outputDirectory>
								</artifactItem>
                                
                                <!-- extracting depot_tools -->
                                <artifactItem>
									<groupId>softwares.cpp</groupId>
									<artifactId>depot_tools</artifactId>
									<version>${depot_tools.version}</version>
									<type>zip</type>
									<overWrite>false</overWrite>
									<outputDirectory>../workspace/tools</outputDirectory>
								</artifactItem>
								

								<!-- extracting Phantomjs  -->
								<artifactItem>
									<groupId>binaries</groupId>
									<artifactId>phantomjs</artifactId>
									<version>${phantomjs.version}</version>
                                    <classifier>${phantomjs.classifier}</classifier>
									<type>zip</type>
									<overWrite>false</overWrite>
									<outputDirectory>../workspace/tools</outputDirectory>
								</artifactItem>
                                    
                                <!--extracting tfs zip file-->
								<artifactItem>
									  <groupId>com.tfs</groupId>
									  <artifactId>tfs</artifactId>
									  <version>${tfs.version}</version>
									  <type>zip</type>
									  <overWrite>false</overWrite>
									  <outputDirectory>../workspace/tools</outputDirectory>
							    </artifactItem>
                                    
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
		
        	<plugin>
        		<groupId>org.codehaus.mojo</groupId>
            	<artifactId>build-helper-maven-plugin</artifactId>
            	<version>1.7</version>
            	<executions>
	              <execution>
	                <id>reserve-network-port</id>
	                <goals>
	                  <goal>reserve-network-port</goal>
	                </goals>
	                <phase>validate</phase>
	                <configuration>
	                  <portNames>
	                    <portName>phresco.file.server.port.num</portName>
	                  </portNames>
	                </configuration>
	              </execution>
	            </executions>
        	</plugin>
        	
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
                    <execution>
						<id>deploy-phresco</id>
						<phase>validate</phase>
						<goals>
						  <goal>run</goal>
						</goals>
						<configuration>
							<tasks>  
								<property name="file-server-location" value="${maven.dependency.com.photon.phresco.file.server.file-server.jar.path}"/>
								<echo message="file server location: ${file-server-location}"/>
								<ant antfile="build.xml" target="run-phresco" inheritRefs="true" inheritAll="true"/>
							</tasks>
						</configuration>
					</execution>
					<execution>
						<id>clean-phresco</id>
						<phase>clean</phase>
						<goals>
						  <goal>run</goal>
						</goals>
						<configuration>
							<target>
								  <ant antfile="build.xml" target="clean-phresco" inheritAll="false"/>
							</target>
						</configuration>
					</execution>
                  
				</executions>
			</plugin>
			
		</plugins>
	</build>
    <profiles>
            <profile>
                <id>windows-x86</id>
                <activation>
                    <os>
                        <family>Windows</family>
                    </os>
                </activation>
                <properties>                
                    <phantomjs.classifier>windows</phantomjs.classifier>
                    </properties>
            </profile>
            <profile>
                <id>Linux-32bit</id>
                <activation>
                    <os>
                        <family>unix</family>
                        <name>Linux</name>
                        <arch>i386</arch>
                    </os>
                </activation>
                <properties>
                    <phantomjs.classifier>linux-x86</phantomjs.classifier>
                    </properties>
            </profile>
            <profile>
                <id>Linux-64bit</id>
                <activation>
                    <os>
                        <family>unix</family>
                        <name>Linux</name>
                        <arch>x64</arch>
                    </os>
                </activation>
                <properties>
                    <phantomjs.classifier>linux-x64</phantomjs.classifier>
                    </properties>
            </profile>
            <profile>
                <id>mac</id>
                <activation>
                    <os>
                        <family>mac</family>
                    </os>
                </activation>
                <properties>
                    <phantomjs.classifier>mac</phantomjs.classifier>
                    </properties>
            </profile>
        </profiles>

</project>
